""" 
    Prime tools
    ~~~~~~~~~~~

    :desc:
    Some functions that I've been using while solving Euler problems.
"""
import time


def return_next_prime(previous):
    """ Given a starting point (a list) return the next prime
        number.

        >>> return_next_prime([2,3,5,7])
        11

        >>> return_next_prime([2,3,5,7,11])
        13
    """

    candidate = max(previous) + 1

    while True:
        checks = []
        for number in previous:
            checks.append(candidate % number == 0)
        if True not in checks:
            break
        else:
            candidate += 1

    return candidate


def nth_prime(n):
    """ Find the nth prime number.
    """

    # 2 is the 2nd number. 1 isn't included 
    # because it messes up :func:return_next_prime
    primes = [2]
    i = 2

    while i <= n:
        next_prime = return_next_prime(primes)
        primes.append(next_prime)
        i += 1

    print primes[-2]


def sieve_prime(n):
    """ Return a list of primes using the sieve method.

        Largest prime is smaller then n.
    """



